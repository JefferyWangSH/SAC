cmake_minimum_required(VERSION 2.8)

project(sac)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -march=native -O3 -fopenmp")

set(MKLROOT /public1/soft/intel/2020/compilers_and_libraries_2020.4.304/linux/mkl)
set(MPIROOT /public1/soft/intel/2020/compilers_and_libraries_2020.4.304/linux/mpi/intel64)
set(CMAKE_CXX_COMPILER ${MPIROOT}/bin/mpicxx)
set(CMAKE_C_COMPILER ${MPIROOT}/bin/mpicc)

set(BOOSTROOT /public1/soft/boost/1-55-0)
set(Boost_USE_RELEASE_lIBS ON)
set(Boost_USE_MULTITHREAD ON)

set(EIGENROOT /public1/home/sc81233/xuchengwang/local/eigen-3.4.0)

include_directories(
        ${MKLROOT}/include
        ${MPIROOT}/include
        ${BOOSTROOT}/include/boost
        ${EIGENROOT}
)

link_directories(
        ${MKLROOT}/lib/intel64
        ${MPIROOT}/lib
        ${BOOSTROOT}/lib
)

aux_source_directory(${PROJECT_SOURCE_DIR}/src SRC_DIR)

add_executable(${PROJECT_NAME} ${SRC_DIR})

target_include_directories(${PROJECT_NAME} 
        PRIVATE 
        ${PROJECT_SOURCE_DIR}/include
)

target_link_libraries(${PROJECT_NAME}
        mkl_gf_lp64
        mkl_intel_thread
        mkl_gnu_thread
        mkl_blas95_lp64
        mkl_intel_lp64
        mkl_sequential
        iomp5
        mkl_core
        pthread
        m
        boost_program_options
        boost_mpi
        boost_serialization
)